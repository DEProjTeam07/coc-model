# PostgreDB와 Grafana 이미지 생성 및 컨테이너를 띄우기 위한 작업을 한다. 
services:
  service_survey_postgres:
    image: postgres:15
    restart: always
    env_file:
      - .env  # 환경 변수를 .env 파일에서 로드
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - db-data:/var/lib/postgresql/data  # PostgreSQL 데이터 저장
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql  # 초기 테이블 생성 SQL 스크립트
      - ./timezone.sql:/docker-entrypoint-initdb.d/timezone.sql  # 타임존 설정 스크립트
    command: ["postgres", "-c", "log_timezone=Asia/Seoul"]  # 로그 기록을 한국 시각으로  설정
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]  # DB 접근 확인 추가
      interval: 10s
      timeout: 5s
      retries: 5

  service_survey_grafana:
    image: grafana/grafana:10.0.0
    restart: always
    env_file:
      - .env  # 환경 변수를 .env 파일에서 로드
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
      - TZ=${TZ}  # 한국 시간대 설정
    ports:
      - "3000:3000"  # Grafana UI 포트
    volumes:
      - grafana-data:/var/lib/grafana  # Grafana 데이터 저장
      - ./grafana/provisioning:/etc/grafana/provisioning  # Grafana가 PostgreDB를 인식하게 한다. 
    depends_on:
      service_survey_postgres:
        condition: service_healthy  # PostgreSQL 서비스가 준비된 후 시작
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  db-data:
  grafana-data:
