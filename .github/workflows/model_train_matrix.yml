name: new model push to training

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs: 
  train-model:
    runs-on: [self-hosted, linux, X64]
    strategy:
      matrix:
        model_type: [cnn, resnet, efficientnet, tinyvgg]
        dataset_version: [version_1]
        epoch: [10, 20]
        learning_rate: [0.01]
        optimizer_type: ['adam', 'sgd']
        batch_size: [16]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: 디버그 로그 보기
        run: |
          echo "GITHUB_ACTIONS_DEBUG=true" >> $GITHUB_ENV

      - name: git pull
        run: |
          cd /home/ubuntu/flatfix
          git pull
          
      - name: 환경 설정
        run: |
          echo "MODEL_TYPE=${{ matrix.model_type }}" >> .env
          echo "DATASET_VERSION=${{ matrix.dataset_version }}" >> .env
          echo "EPOCH=${{ matrix.epoch }}" >> .env
          echo "LEARNING_RATE=${{ matrix.learning_rate }}" >> .env
          echo "OPTIMIZER_TYPE=${{ matrix.optimizer_type }}" >> .env
          echo "BATCH_SIZE=${{ matrix.batch_size }}" >> .env

      - name: python 설치
        uses: actions/setup-python@v2
        with:
          python-version: 3.11.9

      - name: 의존성 설치
        run: |
         pip install pytest
         
      - name: pytest 실행
        run: |
          pytest /home/ubuntu/flatfix/test/

      - name: 도커 컴포즈 업
        run: |
          cd /home/ubuntu/flatfix
          docker compose up --build -d
          
