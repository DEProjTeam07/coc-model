name: CI/CD 

on:
  # 실행되는 조건은 임시적으로 수동적으로 실행되게끔 했다. 즉각적으로 테스트하기 위함이다. 
  workflow_dispatch:

jobs:
  job1:
    runs-on: self-hosted
    steps:
       # mlflow 서버가 켜져 있으면 끄는 작업을 한다. 
       - name: Check if MLflow server is running with absolute path 
         run: |
           echo "MLflow 서버 상태를 확인하는 작업은 보류입니다."

      
       # Flask 서버가 켜져 있으면 끄는 작업을 한다. 
       - name: Check if Flask server is running with absolute path
         run: |
          if pgrep -f "/home/ubuntu/youngwoo-flask-app/backend_app_v1.py"; then
            echo "Flask 서버가 켜져있습니다."
            echo "Automated Pipeline를 실행해야 되서 재정비를 해야 하므로 Flask 서버를 종료하겠습니다."
            pkill -f "/home/ubuntu/youngwoo-flask-app/backend_app_v1.py"
            echo "Flask 서버를 종료했습니다."
          else
            echo "Flask 서버가 이미 꺼져 있는 상태이므로 별다른 작업을 하지 않겠습니다."
          fi


       # Streamlit 서버가 켜져 있으면 끄는 작업을 한다.
       - name: Check if Streamlit server is running
         run: |
           if pgrep -f "/home/ubuntu/youngwoo-flask-app/fronted_app_v1.py"; then
             echo "Streamlit 서버가 켜져있습니다."
             echo "Automated Pipeline을 실행해야 되서 재정비를 해야 하므로 Streamlit 서버를 종료하겠습니다."
             pkill -f "/home/ubuntu/youngwoo-flask-app/fronted_app_v1.py"
             echo "Streamlit 서버를 종료했습니다."
           else
             echo "Streamlit 서버가 이미 종료된 상태이므로 별다른 작업을 하지 않겠습니다."
           fi

       


       # mlflow 서버를 켜는 작업을 한다. 



       # 모델 코드의 시작점인 main.py를 실행해서 Automated Piepline에 이어서 모델 관련 지표, 모델 등록과 관련된 작업을 할 수 있도록 한다. 

       

       # Flask 서버를 켜는 스크립트 실행 전 실행 권한(execute) 부여
       - name: Grant execute permission to flask_start.sh
         run: chmod +x /home/ubuntu/youngwoo-flask-app/flask_start.sh
        

       # Flask 서버를 켜는 외부 스크립트 실행
       - name: Start Flask server using external script
         run: /home/ubuntu/youngwoo-flask-app/flask_start.sh
         

       # Flask 서버가 켜져 있는지 확인한다. 
       - name: Verify Flask server is running
         run: |
              if pgrep -f "/home/ubuntu/youngwoo-flask-app/backend_app_v1.py"; then
                echo "Flask 서버가 성공적으로 실행되고 있습니다."
              else
                echo "Flask 서버가 시작되지 않았습니다." && exit 1
              fi



       # Streamlit 서버를 켠다. 


       
      


       
      



       
      
