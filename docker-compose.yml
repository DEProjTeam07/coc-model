services:
  postgres-0:
    image: bitnami/postgresql-repmgr:14
    container_name: postgres-0
    ports:
      - "5433:5432"
    env_file:
      - path: ./.config/env/.master_env
    volumes:
      - postgres0_data:/bitnami/postgresql
    networks:
      - mlflow-network # 네트워크를 default에서 mlflow-network로 변경
    deploy:
      resources:
        limits:
          memory: 4g
        reservations:
          memory: 2g

  postgres-1:
    image: bitnami/postgresql-repmgr:14
    container_name: postgres-1
    ports:
      - "5435:5432"
    env_file:
      - path: ./.config/env/.worker_env
    depends_on:
      - postgres-0
    volumes:
      - postgres1_data:/bitnami/postgresql
    networks:
      - mlflow-network # 네트워크 변경
    deploy:
      resources:
        limits:
          memory: 4g
        reservations:
          memory: 2g

  pgpool:
    image: docker.io/bitnami/pgpool:4
    container_name: pgpool
    user: "1001"
    ports:
      - "5430:5432"
    env_file:
      - path: ./.config/env/.pgpool_env
    depends_on:
      - postgres-0
      - postgres-1
    healthcheck:
      test: [ "CMD", "/opt/bitnami/scripts/pgpool/healthcheck.sh" ]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 5g
        reservations:
          memory: 2g
    networks:
      - mlflow-network # 네트워크 변경

  mlflow-server:
    build:
      context: .
      dockerfile: Dockerfile.mlflow
    container_name: mlflow-server
    ports:
      - "15000:15000"
    environment:
      - MLFLOW_BACKEND_STORE_URI=postgresql://master_user:proj777!@pgpool:5432/MLFLOW_DB
      - MLFLOW_ARTIFACT_DESTINATION=s3://deprojteam07-datalake/model_registry/
    deploy:
      resources:
        limits:
          memory: 10g
        reservations:
          memory: 2g
    networks:
      - mlflow-network # 네트워크 변경
    command: mlflow server --port 15000 --host 0.0.0.0 --default-artifact-root s3://deprojteam07-datalake/model_registry/ --backend-store-uri postgresql://master_user:proj777!@pgpool:5432/MLFLOW_DB

  train-model:
    build:
      context: .
      dockerfile: Dockerfile.experiments
    container_name: train-model
    environment:
      - MLFLOW_TRACKING_URI=http://172.31.15.63:15000
      - MLFLOW_BACKEND_STORE_URI=postgresql://master_user:proj777!@pgpool:5432/MLFLOW_DB
      - MLFLOW_ARTIFACT_DESTINATION=s3://deprojteam07-datalake/model_registry/
      - MLFLOW_S3_ENDPOINT_URL=https://s3.amazonaws.com
    networks:
      - mlflow-network # 네트워크 변경

volumes:
  postgres0_data:
  postgres1_data:


networks:
  mlflow-network:
    driver: bridge
